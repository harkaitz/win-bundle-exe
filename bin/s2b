#!/bin/sh -e
##:
#h: Usage: s2b OPTS... SCRIPT ARGS...
#h:
#h: Create a SCRIPT.bat file from a shell script for easy sharing
#h: with other MS Windows users.
#h:
#h: Notes:
#h:
#h:   1. When a shell is missing a busybox 64 bits shell is downloaded.
#h:   2. The shell is installed in "%LOCALAPPDATA%\Microsoft\WindowsApps".
#h:   3. The capability of downloading other programs other than "sh.exe"
#h:      was left out knowingly. That should be done by the script.
#h:
#h: Command line arguments:
#h:
#h:   -o DIR : Output directory (by default ~/S2B).
#h:   -i     : Automatically install script in PATH on execution.
#h:   -e     : Open bundle directory with "explorer.exe" after creation.
#h:   -p     : Put a pause after the execution.
#h:
#h: Example: s2b -eip s2b_example HELLO WORLD
##:
s2b() {
    local OPTIND optopt script basename opt_o= opt_i= opt_e= opt_p=
    
    ## Parse command line options.
    while getopts "o:iep" optopt; do
        case $optopt in
            o)  opt_o="${OPTARG}";;
            i)  opt_i=y;;
            e)  opt_e=y;;
            p)  opt_p=y;;
            \?) return 1;;
        esac
    done
    shift $(( $OPTIND - 1 ))
    if test -n "${1}"; then
        
        ## Search script.
        script="$(which -a "$1" | sed '/\.bat$/d' | head -n 1)"
        if test ! -n "${script}"; then
            echo >&2 "error: $1: Not found."
            return 1
        fi
        
        ## Create output directory.
        if test ! -n "${opt_o}"; then
            opt_o="${HOME}/S2B"
            mkdir -p "${opt_o}"
        fi
        
        ## Reach arguments.
        shift
        
        ## Calculate output name.
        basename="$(basename "${script}" .bat)"
        output="${opt_o}/${basename}.bat"
        
        ## Create script.
        echo "Creating ${output} ..."
        if true; then
            cat > "${output}" <<-FOFO
		: AUTOMATICALLY GENERATED BY S2B <<EOF
		@echo off
		set WD=%CD%
		set IDIR=%LOCALAPPDATA%\\Microsoft\\WindowsApps
		set SCRNAME=${basename}
		cd %IDIR%
		where sh > nul 2>&1
		if %errorlevel% neq 0 (
		    echo To run this script you need a compatible bourne shell in your  1>&2
		    echo system, type enter to install one.                             1>&2
		    echo.                                                               1>&2
		    pause                                                               1>&2
		    start /wait bitsadmin /transfer "DownloadJob" /download /priority normal "https://frippery.org/files/busybox/busybox64.exe" "%CD%\sh.exe"
		    pause 1>&2
		)
		cd %WD%
		FOFO
        fi
        if test -n "${opt_i}"; then
            cat <<-FOFO >> "${output}"
		copy /B /Y "%~f0" "%IDIR%\\${basename}.bat" 1>&2 > nul
		copy /B /Y "%~f0" "%IDIR%\\${basename}"     1>&2 > nul
		sh.exe -e "%IDIR%\\${basename}" $* %*
		FOFO
        else
            cat >> "${output}" <<-FOFO
		sh.exe -e "%~f0" $* %*
		FOFO
        fi
        if test -n "${opt_p}"; then
            cat >> "${output}" <<-FOFO
		pause
		FOFO
        fi
        if true; then
            cat >> "${output}" <<-FOFO
		exit /B %ERRORLEVEL%
		EOF
		FOFO
        fi
        if which hsh >/dev/null 2>&1; then
            hsh -o - "${script}" >> "${output}"
        else
            cat "${script}" >> "${output}"
        fi
        dos2unix "${output}" >/dev/null
    fi
    if test -n "${opt_e}"; then
        explorer "$(echo "${opt_o:-${HOME}/BUNDLES}" | tr '/' '\\')"
    fi
}
## -------------------------------------------------------------------
case "${1}" in
    ''|-h|--help) sed -n 's/^ *#h: \{0,1\}//p' "$0";;
    *)            s2b "$@"; exit 0;;
esac
